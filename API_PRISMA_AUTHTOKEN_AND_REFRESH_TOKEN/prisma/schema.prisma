// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  CLIENT
}

model User {
  id               String         @id @unique @default(uuid())
  name             String?
  gitHubId         String?        @unique @db.Text
  email            String         @unique
  password         String
  verificationCode String?        @unique @db.Text //os dados s√£o notNullAble por default
  refreshTokens    RefreshToken[]
  orders           Orders[]
  role             Role           @default(CLIENT)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Products {
  id       String  @id @unique @default(uuid())
  name     String
  photo    String?
  price    String
  Orders   Orders? @relation(fields: [ordersId], references: [id], onDelete: Cascade)
  ordersId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Orders {
  id        String     @id @unique @default(uuid())
  value     String
  coupons   Coupons?    @relation(fields: [couponsId], references: [id])
  products  Products[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  User      User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?
  couponsId String?
  isPaid    Boolean   @default(false)
}

model Coupons {
  id          String   @id @unique @default(uuid())
  title       String
  description String
  value       String
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Orders      Orders[]
}
